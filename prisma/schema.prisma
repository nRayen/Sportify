generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id(map: "USER_pkey") @default(autoincrement())
  pseudo           String             @unique @db.VarChar(50)
  firstname        String             @db.VarChar(50)
  lastname         String             @db.VarChar(50)
  email            String             @unique(map: "USER_email_key") @db.VarChar(100)
  password         String             @db.VarChar(255)
  birthday         DateTime?          @db.Date
  sex              String?            @db.Char(1)
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  last_auth        DateTime?          @db.Timestamp(6)
  Exercice         Exercice[]
  HeightEntry      HeightEntry[]
  ResetPasswordKey ResetPasswordKey[]
  Seance           Seance[]
  WeightEntry      WeightEntry[]
}

model Seance {
  id        Int      @id(map: "seance_pkey") @default(autoincrement())
  id_user   Int
  title     String   @db.VarChar(15)
  date      DateTime @db.Timestamp(6)
  type      String   @db.VarChar(20)
  duration  Int
  objective String?
  User      User     @relation(fields: [id_user], references: [id], onDelete: Cascade, map: "user_id_fkey")
}

model ResetPasswordKey {
  id         Int      @id @default(autoincrement())
  key        String   @db.VarChar(100)
  id_user    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  User       User     @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fkey")
}

model Exercice {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(50)
  description String?
  public      Boolean @default(false)
  id_user     Int
  User        User    @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "constraint_1")
}

model ExerciceStats {
  id          Int     @id @default(autoincrement())
  id_exercice Int
  id_seance   Int
  reps        Int
  weight      Decimal @db.Decimal(5, 1)
  sets        Int
}

model HeightEntry {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)
  height     Int
  id_user    Int
  User       User     @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "constraint_1")
}

model WeightEntry {
  id         Int      @id @default(autoincrement())
  weight     Decimal  @db.Decimal(5, 1)
  created_at DateTime @default(now()) @db.Timestamp(6)
  id_user    Int
  User       User     @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "constraint_1")
}
